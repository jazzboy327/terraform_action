name: "Terraform Deploy Pipeline"

on:
  pull_request:
    paths:
      - 'teams/**'
    types:
      - opened
      - synchronize
      - reopened
      - closed  # 병합 후 apply 용

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_USE_OIDC: true
  TF_WORKING_DIR: teams/dev1
  VM_ADMIN_PASSWORD: ${{ secrets.VM_ADMIN_PASSWORD }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: dev
    timeout-minutes: 15
    
    permissions:
      contents: read
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout 
        uses: actions/checkout@v4

      - name: Login to Azure with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}        

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"    

      - name: Detect modified team directory
        id: changes
        run: |
          echo "📂 Changed files:"
          git fetch origin ${{ github.event.pull_request.base.ref }}
          git diff --name-only origin/${{ github.event.pull_request.base.ref }}...HEAD | tee files.txt

          echo "==== files.txt 내용 ===="
          cat files.txt
          echo "======================="
          
          TEAM_DIR=$(cat files.txt | grep '^teams/' | cut -d '/' -f1-2 | uniq | head -n 1)
          
          if [[ -z "$TEAM_DIR" ]]; then
            echo "❌ No team directory found. Exiting."
            exit 1
          fi

          echo "✅ Detected team directory: $TEAM_DIR"
          echo "team_dir=$TEAM_DIR" >> $GITHUB_OUTPUT

      - name: Terraform Init
        working-directory: ${{ steps.changes.outputs.team_dir }}
        run: terraform init -backend-config=../../backend/backend.tfvars

      - name: Terraform Format Check
        working-directory: ${{ steps.changes.outputs.team_dir }}
        run: terraform fmt -check -recursive

      - name: Terraform Plan
        if: github.event.action != 'closed'
        working-directory: ${{ steps.changes.outputs.team_dir }}
        run: terraform plan -var-file="terraform.tfvars" -input=false

      - name: Terraform Apply
        if: github.event.pull_request.merged == true
        working-directory: ${{ steps.changes.outputs.team_dir }}
        run: terraform apply -var-file="terraform.tfvars" -auto-approve
