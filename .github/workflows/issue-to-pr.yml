name: Issue to Terraform PR

on:
  issues:
    types: [opened, edited]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  id-token: write
  issues: read

jobs:
  generate-terraform-pr:
    if: contains(github.event.issue.title, '[Terraform]')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Save issue body to file
        id: generate
        run: |
          cat <<'EOF' > issue.txt
          ${{ github.event.issue.body }}
          EOF
          
          # issue.txt 파일에서 팀명 추출 (- 팀명: "dev3")
          TEAM_NAME=$(grep '^팀명:' issue.txt | cut -d: -f2 | xargs)
          echo "TEAM_NAME: $TEAM_NAME"
          echo "team_dir=teams/${TEAM_NAME}" >> "$GITHUB_OUTPUT"

      - name: Parse issue to tfvars and copy template files
        run: |
          TEAM_DIR="${{ steps.generate.outputs.team_dir }}"
          mkdir -p "$TEAM_DIR"
          bash scripts/parse-issue-to-tfvars.sh issue.txt > "$TEAM_DIR/terraform.tfvars"
          echo 'admin_password = "'$VM_ADMIN_PASSWORD'"' >> "$TEAM_DIR/terraform.tfvars"
          cp template/* "$TEAM_DIR/"
          bash scripts/create_team_tf.sh "$TEAM_NAME"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "feat: add terraform config for ${{ steps.generate.outputs.team_dir }}"
          branch: "issue-${{ github.event.issue.number }}"
          title: "Infra 요청 자동화 PR: #${{ github.event.issue.number }}"
          body: |
            이 PR은 이슈 #${{ github.event.issue.number }}을 기반으로 생성된 자동 PR입니다.
            - 디렉토리: `${{ steps.generate.outputs.team_dir }}`
          labels: terraform, autogenerated
